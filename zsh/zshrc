PATH="/usr/local/bin:/usr/local/sbin:$PATH"

#  Path to your oh-my-zsh configuration.
export ZSH="$HOME/dotfiles/zsh/oh-my-zsh"

# Location of custom additions to zsh
ZSH_CUSTOM=$HOME/dotfiles/zsh/custom

# ZSH Theme
export ZSH_THEME="paleking"

# Comment this out to disable weekly auto-update checks
export DISABLE_AUTO_UPDATE="true"

# Editor
export EDITOR='vim'
export VISUAL="vim":q

source $ZSH/oh-my-zsh.sh

# Disable hostname completion
zstyle ':completion:*' hosts off
__git_files () { 
    _wanted files expl 'local files' _files     
}

#remove git dirty slowness
function git_prompt_info() {
  ref=$(git symbolic-ref HEAD 2> /dev/null) || return
  echo "$ZSH_THEME_GIT_PROMPT_PREFIX${ref#refs/heads/}$ZSH_THEME_GIT_PROMPT_SUFFIX"
}

# Aliases - Config
alias mvim="open -a MacVim"
alias zshrc="mvim ~/dotfiles/zsh/zshrc"
alias vimrc="mvim ~/dotfiles/vim/vimrc"
alias tmuxrc="mvim ~/dotfiles/tmux/tmux.conf"

# Aliases - Editor
# MacVim as terminal vim
alias vim="/Users/mezdef/Applications/MacVim.app/Contents/MacOS/Vim"

# Aliases - Navigation
alias cl="clear"
 
# Aliases - Git
alias g="git"

# Set VI mode for zsh
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode

# Uncomment following line if you want red dots to be displayed while waiting for completion
COMPLETION_WAITING_DOTS="true"

# plugins=(git brew rvm bundler osx history-substring-search zsh-syntax-highlighting)
plugins=(git rvm bundler osx history-substring-search zsh-syntax-highlighting)
# make search up and down work, so partially type and hit up/down to find relevant stuff
bindkey '^[[A' up-line-or-search                                                
bindkey '^[[B' down-line-or-search

# $PATH
# # This puts homebrew packages first in path
PATH=/usr/local/bin:/usr/local/sbin:$PATH

# Path ------------------------------------------------------------
if [ -d ~/.local/bin ]; then export PATH=~/.local/bin:$PATH ; fi

# Python path -----------------------------------------------------
#if [ -d ~/.local/lib/python2.7/site-packages ]; then
export PIP_DOWNLOAD_CACHE="$HOME/.pip/cache"
export PYTHONSTARTUP="$HOME/.pythonrc.py"
export WORKON_HOME="${HOME}/lib/virtualenvs"
export PATH="${PATH}:/Developer/usr/bin/"
export PATH="${PATH}:/usr/local/share/python/"
export PATH="${PATH}:$HOME/.lein/bin"
export PYTHONPATH="$PYTHONPATH:/usr/local/Cellar/python/2.7.3/lib/python2.7/site-packages"
export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python2.7.3/site-packages"
export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python2.7/site-packages"
export VEW_PATH="$HOME/lib/python/virtualenvwrapper/virtualenvwrapper.sh"
export VEW_PATH="/usr/local/share/python/virtualenvwrapper.sh"
export PYTHONPATH="$HOME/lib/python/see:$PYTHONPATH"
export NODE_PATH="$NODE_PATH:/usr/local/lib/node:/usr/local/lib/node_modules"
#fi


# Python variables -----------------------------------------------------------
# export PIP_DOWNLOAD_CACHE="$HOME/.pip/cache"
# export PYTHONSTARTUP="$HOME/.pythonrc.py"
# export WORKON_HOME="${HOME}/lib/virtualenvs"
# export PATH="${PATH}:/Developer/usr/bin/"
# export PATH="${PATH}:/usr/local/share/python/"
# export PATH="${PATH}:$HOME/.lein/bin"
export PYTHONPATH="$PYTHONPATH:/usr/local/Cellar/python/2.7.3/lib/python2.7/site-packages"
# export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python2.7.1/site-packages"
# export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python2.7/site-packages"
# export PYTHONPATH="$PYTHONPATH:/usr/local/lib/python2.6/site-packages"
# export VEW_PATH="$HOME/lib/python/virtualenvwrapper/virtualenvwrapper.sh"
# export VEW_PATH="/usr/local/share/python/virtualenvwrapper.sh"
# export PYTHONPATH="$HOME/lib/python/see:$PYTHONPATH"
# export NODE_PATH="$NODE_PATH:/usr/local/lib/node:/usr/local/lib/node_modules"

# Load in .bashrc -------------------------------------------------
#if [ -f ~/.bashrc ]; then
  #source ~/.bashrc
#fi

#export PATH=$HOME/.rbenv/bin:$PATH
#eval "$(rbenv init -)"

# added RVM stuff
# load RVM
[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm"

#Tmuxinator
# [[ -s $HOME/.tmuxinator/scripts/tmuxinator ]] && source $HOME/.tmuxinator/scripts/tmuxinator

# Tmux Powerline
#PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#I_#P") "$PWD")'

PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting
